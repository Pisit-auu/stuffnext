// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Asset {
  id        Int      @id @default(autoincrement())
  name     String
  img   String?
  assetid String @unique
  categoryId String
  category   Category @relation(fields: [categoryId], references: [idname], onDelete: Cascade)
  availableValue Int @default(0)
  unavailableValue Int @default(0)
  createdAt DateTime @default(now())

  locations AssetLocation[]
}
model Category {
  id    Int    @id @default(autoincrement())
  idname  String @unique
  name String
  asset Asset[]
}
model Location{
  id    Int    @id @default(autoincrement())
  namelocation String @unique
  nameteacher String?

  assets AssetLocation[]

}
model AssetLocation {
  id         Int   @id @default(autoincrement())
  assetId    String
  locationId String
  inRoomavailableValue Int @default(1)
  inRoomaunavailableValue Int @default(0)

  asset   Asset   @relation(fields: [assetId], references: [assetid], onDelete: Cascade)
  location Location @relation(fields: [locationId], references: [namelocation], onDelete: Cascade)

  @@unique([assetId, locationId]) // ป้องกัน asset ซ้ำใน location เดิม
}